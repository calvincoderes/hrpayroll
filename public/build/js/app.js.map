{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function ($) {\n\tvar base = $(this);\n\n\tbase.data = {};\n\n\t$.extend({\n\t\tModalBasedCrud: function ModalBasedCrud(param) {\n\t\t\tbase.data = $.extend({ url: '', linkObject: null }, param);\n\n\t\t\tbase.init();\n\t\t}\n\t});\n\n\tbase.init = function () {\n\n\t\t// Render Page\n\t\tbase.render();\n\n\t\t$('.profile-usermenu li').eq(0).addClass('active');\n\n\t\tif (localStorage.getItem('active-module')) {\n\t\t\t$('.profile-usermenu li').removeClass('active');\n\t\t\t$('.profile-usermenu li').eq(localStorage.getItem('active-module')).addClass('active');\n\t\t}\n\n\t\t// On click of Link\n\t\tbase.data.linkObject.click(function (e) {\n\t\t\t// If link prevent and img-thumbnail is triggered ( excempt )\n\t\t\tif ($(this).hasClass('prevent') || $(this).hasClass('img-thumbnail') || $(this).hasClass('close-modal')) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// Profile User menu\n\t\t\t$('.profile-usermenu li').removeClass('active');\n\t\t\t$(this).parents('li').addClass('active');\n\n\t\t\tvar index = $(this).parent().index('.profile-usermenu li');\n\n\t\t\tlocalStorage.setItem('active-module', index);\n\n\t\t\t// Override the value of URL\n\t\t\tbase.data.url = $(this).attr('href');\n\n\t\t\tif (history.pushState) history.pushState(null, null, base.data.url);\n\n\t\t\t// Render Page\n\t\t\tbase.render();\n\t\t});\n\t};\n\n\t// Render Page\n\tbase.render = function () {\n\n\t\t// Loader\n\t\t//base.data.container.html('<h1><i class=\"fa fa-refresh fa-spin fa-3x fa-fw margin-bottom\"></i></h1>');\n\t\t//$('#loader').remove();\n\t\tbase.data.container.append('<div class=\"row\" id=\"loader\" ><h1 id=\"spinner\"><i class=\"fa fa-refresh fa-spin fa-3x fa-fw margin-bottom\"></i></h1></div>');\n\t\t// Page content loading\n\t\t$.ajax({\n\t\t\turl: base.data.url,\n\t\t\tdataType: 'html',\n\t\t\tcache: true,\n\t\t\theaders: { 'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content') },\n\t\t\tsuccess: function success(html) {\n\n\t\t\t\t// Load Page\n\t\t\t\tbase.data.container.html(html);\n\n\t\t\t\t// Load Plugins\n\t\t\t\tbase.plugins();\n\n\t\t\t\t// Auto save Drafts\n\t\t\t\tbase.drafts();\n\n\t\t\t\t// Manage all Form for List Filter State\n\t\t\t\tbase.index();\n\n\t\t\t\t// Manage all Form for Create and Edit State\n\t\t\t\tbase.form();\n\t\t\t}\n\t\t});\n\t};\n\n\t// Form Drafts\n\tbase.drafts = function () {\n\n\t\tif (base.get('session_id') !== '' && base.get('session_id') !== undefined && base.get('session_id') !== null) {\n\t\t\t$.ajax({\n\t\t\t\turl: $('base').attr('href') + '/drafts-extract?session_id=' + base.get('session_id'),\n\t\t\t\ttype: 'GET',\n\t\t\t\theaders: { \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content') },\n\t\t\t\tsuccess: function success(json) {\n\t\t\t\t\t$.each(json, function (index, row) {\n\t\t\t\t\t\tconsole.log(row);\n\t\t\t\t\t\tif (index !== '_token' && index !== '_method' && index !== 'url') {\n\t\t\t\t\t\t\t$('input[name=\"' + index + '\"]').val(row);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$(\"form.crud-form :input, form textarea, form select\").change(function () {\n\t\t\tvar form = $('.crud-form');\n\t\t\tvar baseUrl = $('base').attr('href');\n\n\t\t\t$.ajax({\n\t\t\t\turl: $('base').attr('href') + '/drafts?url=' + encodeURIComponent(document.URL.split(baseUrl)[1]),\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: new FormData(form[0]),\n\t\t\t\tcache: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tprocessData: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\theaders: { \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content') },\n\t\t\t\tsuccess: function success(json) {\n\t\t\t\t\tconsole.log(json);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\t// Get URL Variables\n\tbase.get = function (name, url) {\n\t\tif (!url) url = window.location.href;\n\t\tname = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t\tvar regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t\t    results = regex.exec(url);\n\t\tif (!results) return null;\n\t\tif (!results[2]) return '';\n\t\treturn decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t};\n\n\t// Load Plugins\n\tbase.plugins = function () {\n\n\t\t// Select 2\n\t\tif ($('select.form-control').size() > 0) {\n\t\t\t$('select.form-control').select2();\n\t\t\t$(\".form-tag\").select2({\n\t\t\t\ttags: true\n\t\t\t});\n\t\t}\n\n\t\tif ($('.select2').size() > 0) $('.select2').css('width', '100%');\n\t};\n\n\t// Manage all Form for List Filter State\n\tbase.index = function () {\n\n\t\tbase.data.container.find('a').click(function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t// If modal is closed\n\t\t\tif ($(this).hasClass('close-modal')) history.pushState(null, null, $(this).attr('href'));\n\n\t\t\t// If link prevent and img-thumbnail is triggered ( excempt )\n\t\t\tif ($(this).hasClass('prevent') || $(this).hasClass('img-thumbnail') || $(this).hasClass('close-modal')) return;\n\n\t\t\t// If button remove was clicked\n\t\t\tif ($(this).hasClass('remove')) {\n\t\t\t\tvar url = $(this).attr('href');\n\t\t\t\tvar html = '<div class=\"text-center\">';\n\t\t\t\thtml += '<p class=\"lead\">Are you sure you want to remove this record?</p>';\n\t\t\t\thtml += '<a class=\"btn btn-info\" href=\"#\" data-dismiss=\"modal\" id=\"confirm-remove\">CONTINUE</a> ';\n\t\t\t\thtml += '</div>';\n\n\t\t\t\t$(\"#general-modal .modal-body\").html(html);\n\t\t\t\t$(\"#general-modal-label\").html('<span class=\"glyphicon glyphicon-question-sign\"></span> Confirmation');\n\t\t\t\t$(\"#general-modal\").modal('show');\n\n\t\t\t\t$(\"#confirm-remove\").click(function (e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tcache: true,\n\t\t\t\t\t\tdata: { _method: 'delete' },\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\theaders: { \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content') },\n\t\t\t\t\t\tsuccess: function success(json) {\n\t\t\t\t\t\t\tbase.data.url = json['url'];\n\n\t\t\t\t\t\t\tif (history.pushState) history.pushState(null, null, base.data.url);\n\n\t\t\t\t\t\t\tbase.render();\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function error(a, b, c) {}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\t// Assign current URL based on HREF\n\t\t\t\tbase.data.url = $(this).attr('href');\n\n\t\t\t\t// Push State\n\t\t\t\tif (history.pushState) history.pushState(null, null, base.data.url);\n\n\t\t\t\tbase.render();\n\t\t\t}\n\t\t});\n\n\t\t// Manage all Form for List Filter State\n\t\tbase.filter();\n\t};\n\n\t// Manage all Form for List Filter State\n\tbase.filter = function () {\n\t\tbase.data.container.find('.crud-form-filter').submit(function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t$(this).find('input[name=\"_token\"]').remove();\n\n\t\t\tvar url = $(this).attr('action');\n\t\t\turl += '?' + $(this).serialize();\n\n\t\t\tbase.data.url = url;\n\n\t\t\tif (history.pushState) history.pushState(null, null, base.data.url);\n\n\t\t\tbase.render();\n\t\t});\n\t};\n\n\t// Manage all Form for Create and Edit State\n\tbase.form = function () {\n\t\tbase.data.container.find('.crud-form').submit(function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t$('.btn').attr('disabled', true);\n\n\t\t\t// Form\n\t\t\tvar form = $(this);\n\n\t\t\t// Form URL\n\t\t\tvar url = $(this).attr('action');\n\n\t\t\t// URI Segments of URL\n\t\t\tvar uri = String(url).split('/');\n\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: new FormData(form[0]),\n\t\t\t\tcache: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tprocessData: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\theaders: { \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content') },\n\t\t\t\tsuccess: function success(json) {\n\n\t\t\t\t\t$('.error').html('');\n\n\t\t\t\t\tif (Number(json.error.count) > 0) {\n\n\t\t\t\t\t\t$.each(json.error.messages, function (key, row) {\n\t\t\t\t\t\t\tvar error = '';\n\t\t\t\t\t\t\t$.each(row, function (index, result) {\n\n\t\t\t\t\t\t\t\tif (isNaN(result.length)) {\n\n\t\t\t\t\t\t\t\t\t// Getting Sub Error\n\t\t\t\t\t\t\t\t\t$.each(result, function (key_sub, row_sub) {\n\t\t\t\t\t\t\t\t\t\tvar error_sub = '';\n\n\t\t\t\t\t\t\t\t\t\t$.each(row_sub, function (index_sub, result_sub) {\n\t\t\t\t\t\t\t\t\t\t\terror_sub += '<p>' + result_sub + '</p>';\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t$('.error_' + key + '_' + key_sub).eq(index).html(error_sub);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else error += '<p>' + result + '</p>';\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t$('.error_' + key).html(error);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// If there's an error\n\t\t\t\t\t\tvar html = '<div class=\"text-center text-danger\">';\n\t\t\t\t\t\thtml += '<p>Check Fields with Errors</p>';\n\t\t\t\t\t\thtml += '</div>';\n\n\t\t\t\t\t\t$(\"#general-modal .modal-body\").html(html);\n\t\t\t\t\t\t$(\"#general-modal-label\").html('<span class=\"glyphicon glyphicon-exclamation-sign\"></span> Warning');\n\t\t\t\t\t\t$(\"#general-modal\").modal('show');\n\t\t\t\t\t\t$('.btn').attr('disabled', false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('.btn').attr('disabled', false);\n\n\t\t\t\t\t\tbase.data.url = json['url'];\n\n\t\t\t\t\t\tif (history.pushState) history.pushState(null, null, base.data.url);\n\n\t\t\t\t\t\tbase.render();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn false;\n\t\t});\n\t};\n})(jQuery);\n\n//Used to detect initial (useless) popstate.\n//If history.state exists, assume browser isn't going to fire initial popstate.\nvar popped = 'state' in window.history && window.history.state !== null,\n    initialURL = location.href;\n\n//If Back Button Was Clicked\n$(window).bind('popstate', function (event) {\n\tvar initialPop = !popped && location.href == initialURL;\n\tpopped = true;\n\n\t$.ModalBasedCrud({\n\t\turl: document.URL,\n\t\tlinkObject: $('a'),\n\t\tcontainer: $('.crud-content')\n\t});\n\n\tif (initialPop) return;\n});\n\n$(function () {\n\t$.ModalBasedCrud({\n\t\turl: document.URL,\n\t\tlinkObject: $('a'),\n\t\tcontainer: $('.crud-content')\n\t});\n});\n\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}